# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- script: echo Hello, world!
  displayName: 'Run a one-line script'

- script: |
    echo Add other tasks to build, test, and deploy your project.
    echo See https://aka.ms/yaml
  displayName: 'Run a multi-line script'

- task: Maven@3
  inputs:
    mavenPomFile: 'DemoRestAPI/pom.xml'
    goals: 'clean install'
    publishJUnitResults: false
    javaHomeOption: 'JDKVersion'
    mavenVersionOption: 'Default'
    mavenAuthenticateFeed: false
    effectivePomSkip: false
    sonarQubeRunAnalysis: false
- task: Docker@2
  inputs:
    containerRegistry: 'Docker-raghav141988'
    command: 'login'
- task: Docker@2
  inputs:
    containerRegistry: 'Docker-raghav141988'
    repository: 'raghav141988/java-server'
    command: 'buildAndPush'
    Dockerfile: './DemoRestAPI/Dockerfile'
    buildContext: './DemoRestAPI'
    tags: |
      latest
      $(Build.BuildId)
- task: Docker@2
  inputs:
    containerRegistry: 'Docker-raghav141988'
    repository: 'raghav141988/k8s-client'
    command: 'buildAndPush'
    Dockerfile: './multik8s-Client/Dockerfile'
    buildContext: './multik8s-Client'
    tags: |
      latest
      $(Build.BuildId)
- task: Kubernetes@1
  inputs:
    connectionType: 'Kubernetes Service Connection'
    kubernetesServiceEndpoint: 'kubedemo'
    namespace: 'kube-system'
    command: 'apply'
    arguments: '-f k8s'
    secretType: 'dockerRegistry'
    containerRegistryType: 'Container Registry'
    dockerRegistryEndpoint: 'Docker-raghav141988'
    secretName: 'docker-secret'
- task: Kubernetes@1
  inputs:
    connectionType: 'Kubernetes Service Connection'
    kubernetesServiceEndpoint: 'kubedemo'
    namespace: 'kube-system'
    command: 'set'
    arguments: 'image deployment/server-deployment server=raghav141988/java-server:$(Build.BuildId)'
    secretType: 'dockerRegistry'
    containerRegistryType: 'Container Registry'
    dockerRegistryEndpoint: 'Docker-raghav141988'
- task: Kubernetes@1
  inputs:
    connectionType: 'Kubernetes Service Connection'
    kubernetesServiceEndpoint: 'kubedemo'
    namespace: 'kube-system'
    command: 'set'
    arguments: 'image deployment/client-deployment client=raghav141988/k8s-client:$(Build.BuildId)'
    secretType: 'dockerRegistry'
    containerRegistryType: 'Container Registry'
    dockerRegistryEndpoint: 'Docker-raghav141988'